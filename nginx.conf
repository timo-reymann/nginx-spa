# Run in foreground
daemon off;

# PID file
pid /tmp/nginx.pid;

# Basic configuration for events
events {
    worker_connections 768;
    use poll;
}

error_log /dev/stdout;

# Global configuration
http {
    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 32 16k;
    gzip_http_version 1.1;
    gzip_min_length 250;
    gzip_types image/jpeg image/bmp image/svg+xml text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon;

    # Hide nginx version
    server_tokens off;

    # Temp paths
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    include /opt/nginx/conf/mime.types;
    default_type application/octet-stream;

    # HTTP File-Server config
    server {
        listen 8080;
        server_name _;
        root /app;

        # Prevent port in redirect uri
        port_in_redirect off;

        # Add some common security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

        # Disallow dotfiles and directories
        location ~ /\. {
            return 403;
        }

        # Disallow common folders that should not be visible to the public ;)
        location ~* /(\.git|cache|bin|logs|backup|storage|tests|src)/.*$ {
            return 418;
        }

        # Disallow vendor or lib folders
        location ~* /(system|vendor)/.*\.(txt|xml|md|html|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ {
            return 418;
        }

        # Disable to get max performance and reduce unnecessary output
        access_log off;

        # Ignore service worker from caching
        location = /service-worker.js {
            expires off;
            add_header Cache-Control no-cache;
            access_log off;
        }

        # Cache for one week
        location ~* \.(jpg|jpeg|png|webp|gif|ico|css|js)$ {
            expires 7d;
        }

        # First try to lookup asset, otherwise try index.html
        location / {
            try_files $uri $uri/index.html $uri/ @rewrites;
        }

        location = /fallback_index.html {
            root /opt/nginx/html;
            internal;
        }

        # Try index.html
        location @rewrites {
            if (-f /index.html) {
                rewrite ^(.+)$ /index.html last;
                break;
            }

            rewrite ^(.+)$ /fallback_index.html last;
        }

        # customization
        include /etc/nginx/conf.d/*.conf;
    }
}
